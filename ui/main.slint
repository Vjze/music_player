// import { StyleMetrics } from "std-widgets.slint";
// import { Ctrl } from "page/ctrl.slint";
// import { List } from "page/list.slint";
// export component App inherits Window {
//     width: 1240px;
//     height: 760px;
//     // icon: @image-url("reso/logo.png");
//     background: StyleMetrics.window-background;
//     title: @tr("Music_Player");
//     callback loadfile <=> ct.loadfile;
//     callback stop <=> ct.stop;
//     callback paly <=> ct.play;
//     callback next <=> ct.next;
//     callback peaue <=> ct.peaue;
//     in-out property list <=> list.list;
//     in-out property select <=> list.select;
//     VerticalLayout {
//         alignment: start;
//         spacing: 10px;
//             ct := Ctrl {
//                 num:select;
//                 width: root.width;
//                 height: root.height*0.05;
//             }
//             list := List{
//                 width: root.width;
//                 height: root.height;
//             }
        
//     }
// }

import { ListView, Button, Switch, Slider } from "std-widgets.slint";
export component App inherits Window {
    width: 1280px;
    height: 720px;
    title: "Music Player";

    in-out property <[string]> songs: [];
    in-out property <bool> loop;
    in-out property <int> nowtime;
    in-out property <int> maxtime;
    callback play();
    callback pause();
    callback stop();
    callback previous();
    callback next();
    callback open_folder();
    callback toggle_loop(bool);

    VerticalLayout {
        spacing: 10px;
        padding: 10px;
        ListView {
            // : song_list;
            for song in songs : Text {
                text: song;
            }
        }
        HorizontalLayout {
            Slider {
                width: 800px;
                value: nowtime;
                minimum: 0;
                maximum: maxtime;
            }
            Rectangle {
                Text {
                    text: @tr("{} - {}",nowtime,maxtime);
                }
            }
        }
        
        HorizontalLayout {
            alignment: space-between;
            Button { text: "Play"; clicked => {play()} }
            Button { text: "Pause"; clicked => {pause()} }
            Button { text: "Stop"; clicked => {stop() }}
            Button { text: "Previous"; clicked => {previous()} }
            Button { text: "Next"; clicked => {next() }}
            Button { text: "LoadFile"; clicked => {open_folder() }}
            xh := Switch {
                text: "循环播放";
                checked: root.loop;
                toggled => {
                    toggle_loop(root.loop)
                }
            }
        }
    }

    
}
